{
  "name": "vu-button",
  "version": "1.0.2",
  "description": "vision UI Component: Button",
  "dependencies": {
    "classnames": "^2.2.3",
    "vu-base": "^1.0.0",
    "react": "^0.14.0",
    "react-dom": "^0.14.0"
  },
  "author": {
    "name": "vision-ui@wepiao"
  },
  "license": "ISC",
  "readme": "# Button\n\n- category: Components\n- chinese: 按钮\n- type: 基本\n\n---\n\n按钮用于开始一个即时操作。\n\n## 何时使用\n\n标记了一个（或封装一组）操作命令，响应用户点击行为，触发相应的业务逻辑。\n\n\n## API\n\n- 通过设置 Button 的属性来产生不同的按钮样式，推荐顺序为：\n`type` -> `size` -> `disabled` -> `onClick`\n\n- 按钮的属性说明如下：\n\n属性 | 类型 | 默认值 | 说明\n-----|-----|-----|------\ntype | string | undefined | 设置按钮类型，可选值为 `primary` `secondary` `inverse` `primary-inverse` `secondary-inverse`\nsize | string | undefined | 设置按钮大小，可选值为 `small` `large` \ndisabled | Bool | false | 设置按钮不可用\nonClick | Function | `function() {}` | `click` 事件的 handler\n\n- `<Button>Hello world!</Button>` 最终会被渲染为 `<button>Hello world!</button>`，并且除了上表中的属性，其它属性都会直接传到 `<button></button>`\n",
  "readmeFilename": "README.md",
  "gitHead": "2a99aa3c0a5b97677db16116e8d94c04bf43894c",
  "_id": "vu-button@1.0.2",
  "scripts": {},
  "_shasum": "c0e2857af65b51c72fdeb4fd38b2b86047e01de3",
  "_from": "vu-button@>=1.0.2 <2.0.0"
}
